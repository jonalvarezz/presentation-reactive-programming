doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Reactive Programming

    link(rel='stylesheet', type='text/css', href='build/build.css')

  body

    article

      section(data-bespoke-backdrop='start')
        h1 Reactive Programming
        h3 <a href="https://twitter.com/jonalvarezz" target="_blank">@jonalvarezz</a>

      section(data-bespoke-backdrop='asphalt')
        h2 Frontend Developer
        h3 Builder

      section
        h2 This talk is about
        br
        ul
          li Functional Programming
          li Reactive Programming
          li Build in the right way
        br
        p.text-color-red This is NOT about <strong>FRP</strong>

      section(data-bespoke-backdrop='looking-around')
        h3 I know that feel bru

      section(data-bespoke-backdrop='asphalt')
        h2.text-color-yellow Async

      section(data-bespoke-backdrop='asphalt')
        <blockquote class="twitter-tweet" lang="es"><p lang="en" dir="ltr">What do we want?&#10;&#10;ASYNCHRONICITY&#10;&#10;When do we want it?&#10;&#10;THAT’S IRRELEVANT.</p>&mdash; I Am Devloper (@iamdevloper) <a href="https://twitter.com/iamdevloper/status/656798423878799360">octubre 21, 2015</a></blockquote>

      section
        h2.text-color-red Async Nightmares
        br
        ul
          li Memory leaks
          li Callback hell
          li Race Conditions
          li Complex State Machines
          li Disjointed Error Handling

      section(data-bespoke-backdrop='bg-yellow')
        h2.text-color-gray Reactive Programming is about <strong>collections</strong>

      section(data-bespoke-backdrop='asphalt')
        h2 Arrays
        pre
          code.language-javascript.
            [2, 4, 6, 19, 23, 10]

      section()
        h2.text-color-yellow Functional Programming
        h3 Provides developers with the tools to abstract common collection operations into reusable, composable building blocks

      section(data-bespoke-backdrop='asphalt')
        h2 Five functions to rule them all
        ul
          li map()
          li filter()
          li reduce()
          li <span style="text-decoration:line-through">concatAll()</span> flatMap()
          li zip()

      section(data-bespoke-backdrop='bg-white')
        h2.text-color-gray map()
        img(src='images/map.png')

      section(data-bespoke-backdrop='asphalt')
        h2 map()
        br
        pre
          code.language-javascript.
            [1, 2, 3, 4, 5, 6].map(function (number) {
              return number + 3
            });

            // [4, 5, 6, 7, 8, 9]

      section(data-bespoke-backdrop='bg-white')
        h2.text-color-gray filter()
        img(src='images/filter.png')

      section(data-bespoke-backdrop='asphalt')
        h2 filter()
        br
        pre
          code.language-javascript.
            [1, 2, 3, 4, 5, 6].filter(function (number) {
              return number % 2 === 0
            });

            // [2, 4, 6]

      section(data-bespoke-backdrop='asphalt')
        h2 reduce()
        br
        pre
          code.language-javascript.
            [1, 2, 3, 4, 5, 6].reduce(function (acc, curr) {
              return acc + curr
            });

            // [21]

      section(data-bespoke-backdrop='asphalt')
        h2 flatMap()
        br
        pre
          code.language-javascript.
            [ [1], [2, 3], [4, 5, 6]].flatMap();

            // [1, 2, 3, 4, 5, 6]

      section(data-bespoke-backdrop='asphalt')
        h2 zip()
        br
        pre
          code.language-javascript.
            Array.zip([1, 2, 3], [4, 5, 6], function(left, right) {
              return left + right
            });

            // [5, 7, 9];

      section
        h2.text-color-green Demo
        h3 Functional programming & Composition
        p <a href="https://jsbin.com/gukofomimo/edit?js,console">Demo link</a>

      section(data-bespoke-backdrop='not-bad')
        h3 Not bad?

      section(data-bespoke-backdrop='asphalt')
        h3 What's difference between an <strong class="text-color-yellow">Array</strong>...
        br
        pre
          code.language-javascript.
            [{x: 23, y: 30}, {x: 23, y: 40}, {x: 12, y: 90}];

      section(data-bespoke-backdrop='asphalt')
        h3 And an <strong class="text-color-yellow">Event</strong>?
        br
        pre
          code.language-javascript.
            // Mouse Event
            {x: 23, y: 30}... {x: 23, y: 40}... {x: 12, y: 90}...

      section(data-bespoke-backdrop='bg-yellow')
        h2.text-color-gray Arrays and Events are both <span class="text-emphasis">collections</span>

      section
        h2 What if <span class="text-color-yellow">Events (streams)</span> could be projected, filtered, concatenated and zipped?
        h3 ...Like any other Collection

      section(data-bespoke-backdrop='bg-red')
        h3.text-color-white Introducing
        h2.text-color-white Observables
        h3.text-color-white Collection of values in any amount of time

      section
        h2 <span class="text-color-yellow">Reactive programming</span> is about Observables

      section(data-bespoke-backdrop="asphalt")
        h2.text-color-yellow Observables
        br
        ul
          li Start a data stream
          li Emit 0 to N messages
          li Teardown the data stream

      section
        h2.text-color-orange Data Streams
        h3 Can be anything. Arrays, DOM Events, Network request (sockets, Ajax), Animations...

      section(data-bespoke-backdrop='bg-white')
        h2.text-color-gray The General Theory of Reactivity
        img(src='images/reactivity.png')

      section(data-bespoke-backdrop='asphalt', data-bespoke-hash='rx')
        img(src='images/rx.png')
        br
        h2 Reactive Extentensions
        h3 Rx – RxJS – <a target="_blank" href="http://reactivex.io">reactivex.io</a>

      section
        h2.text-color-green Demo
        h3 Drag & Drop with RxJS
        p Code at src/scripts/drag-demo.js

      section
        div#drag-container
          span#drag-element


    script(src='build/build.js')
    <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
